/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.h
  * @brief          : Header for main.c file.
  *                   This file contains the common defines of the application.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2025 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MAIN_H
#define __MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "stm32f4xx_hal.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */
#include <string.h>
#include "keypad.h"
#include "LCD_I2C.h"
#include "flash.h"
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "print_cli.h"
#include "pwm_duty.h"
#include <strings.h>
#include "sht2x_for_stm32_hal.h"
#include <stdio.h>
#include "fatfs_sd.h"
/* USER CODE END Includes */

/* Exported types ------------------------------------------------------------*/
/* USER CODE BEGIN ET */
typedef struct
{
	uint8_t payload[11];
	uint16_t len;
}parameter_t;


typedef struct
{
	uint8_t password[11];
	uint8_t s1;
	uint8_t t1;
	uint8_t s2;
	uint8_t t2;
	uint16_t file_counter;
}__attribute__((packed))Parameter_Infor;

// Application states
typedef enum
{
	sRunning = 0,
	sPassword,
	sMenucofig_Setparameter,
	sMenuconfig_Changepassword,
	sMenuconfig_Saveparameter
}state_t;

extern TaskHandle_t handle_sensor_task;
extern TaskHandle_t handle_print_task;
extern TaskHandle_t handle_scan_keypad_task;
extern TaskHandle_t handle_menuconfig_task;
extern TaskHandle_t handle_password_task;
extern TaskHandle_t handle_motor_task;
extern TaskHandle_t handle_sd_card_task;

extern CLCD_I2C_Name LCD1;

extern Parameter_Infor parameter_read;

extern TIM_HandleTypeDef htim1;

extern UART_HandleTypeDef huart1;

extern UART_HandleTypeDef huart2;

extern QueueHandle_t q_print;

extern state_t curr_state;

extern I2C_HandleTypeDef hi2c1;

extern char name_file[15];

// buffer is sended to sd card
#define BUFFER_SIZE 128
char buffer[BUFFER_SIZE];  // to store strings..

/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */

/* USER CODE END EM */

void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */

/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/
#define B1_Pin GPIO_PIN_13
#define B1_GPIO_Port GPIOC
#define USART_TX_Pin GPIO_PIN_2
#define USART_TX_GPIO_Port GPIOA
#define USART_RX_Pin GPIO_PIN_3
#define USART_RX_GPIO_Port GPIOA
#define LD2_Pin GPIO_PIN_5
#define LD2_GPIO_Port GPIOA
#define TMS_Pin GPIO_PIN_13
#define TMS_GPIO_Port GPIOA
#define TCK_Pin GPIO_PIN_14
#define TCK_GPIO_Port GPIOA
#define SWO_Pin GPIO_PIN_3
#define SWO_GPIO_Port GPIOB

/* USER CODE BEGIN Private defines */
void sensor_task(void *param);
void print_task(void *param);
void scan_keypad_task(void *param);
void menuconfig_task(void *param);
void password_task(void *param);
void motor_task(void *param);
void sd_card_task(void *param);
/* USER CODE END Private defines */

#ifdef __cplusplus
}
#endif

#endif /* __MAIN_H */
